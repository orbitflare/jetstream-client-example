// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.12.4
// source: jetstream.proto

package proto

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ============= Subscribe Request =============
type SubscribeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transactions map[string]*SubscribeRequestFilterTransactions `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Accounts     map[string]*SubscribeRequestFilterAccounts     `protobuf:"bytes,2,rep,name=accounts,proto3" json:"accounts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Ping         *SubscribeRequestPing                          `protobuf:"bytes,4,opt,name=ping,proto3,oneof" json:"ping,omitempty"`
}

func (x *SubscribeRequest) Reset() {
	*x = SubscribeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jetstream_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequest) ProtoMessage() {}

func (x *SubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jetstream_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequest.ProtoReflect.Descriptor instead.
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return file_jetstream_proto_rawDescGZIP(), []int{0}
}

func (x *SubscribeRequest) GetTransactions() map[string]*SubscribeRequestFilterTransactions {
	if x != nil {
		return x.Transactions
	}
	return nil
}

func (x *SubscribeRequest) GetAccounts() map[string]*SubscribeRequestFilterAccounts {
	if x != nil {
		return x.Accounts
	}
	return nil
}

func (x *SubscribeRequest) GetPing() *SubscribeRequestPing {
	if x != nil {
		return x.Ping
	}
	return nil
}

type SubscribeRequestFilterTransactions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountInclude  []string `protobuf:"bytes,1,rep,name=account_include,json=accountInclude,proto3" json:"account_include,omitempty"`
	AccountExclude  []string `protobuf:"bytes,2,rep,name=account_exclude,json=accountExclude,proto3" json:"account_exclude,omitempty"`
	AccountRequired []string `protobuf:"bytes,3,rep,name=account_required,json=accountRequired,proto3" json:"account_required,omitempty"`
}

func (x *SubscribeRequestFilterTransactions) Reset() {
	*x = SubscribeRequestFilterTransactions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jetstream_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeRequestFilterTransactions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequestFilterTransactions) ProtoMessage() {}

func (x *SubscribeRequestFilterTransactions) ProtoReflect() protoreflect.Message {
	mi := &file_jetstream_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequestFilterTransactions.ProtoReflect.Descriptor instead.
func (*SubscribeRequestFilterTransactions) Descriptor() ([]byte, []int) {
	return file_jetstream_proto_rawDescGZIP(), []int{1}
}

func (x *SubscribeRequestFilterTransactions) GetAccountInclude() []string {
	if x != nil {
		return x.AccountInclude
	}
	return nil
}

func (x *SubscribeRequestFilterTransactions) GetAccountExclude() []string {
	if x != nil {
		return x.AccountExclude
	}
	return nil
}

func (x *SubscribeRequestFilterTransactions) GetAccountRequired() []string {
	if x != nil {
		return x.AccountRequired
	}
	return nil
}

type SubscribeRequestFilterAccounts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account []string                                `protobuf:"bytes,1,rep,name=account,proto3" json:"account,omitempty"`
	Owner   []string                                `protobuf:"bytes,2,rep,name=owner,proto3" json:"owner,omitempty"`
	Filters []*SubscribeRequestFilterAccountsFilter `protobuf:"bytes,3,rep,name=filters,proto3" json:"filters,omitempty"`
}

func (x *SubscribeRequestFilterAccounts) Reset() {
	*x = SubscribeRequestFilterAccounts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jetstream_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeRequestFilterAccounts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequestFilterAccounts) ProtoMessage() {}

func (x *SubscribeRequestFilterAccounts) ProtoReflect() protoreflect.Message {
	mi := &file_jetstream_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequestFilterAccounts.ProtoReflect.Descriptor instead.
func (*SubscribeRequestFilterAccounts) Descriptor() ([]byte, []int) {
	return file_jetstream_proto_rawDescGZIP(), []int{2}
}

func (x *SubscribeRequestFilterAccounts) GetAccount() []string {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *SubscribeRequestFilterAccounts) GetOwner() []string {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *SubscribeRequestFilterAccounts) GetFilters() []*SubscribeRequestFilterAccountsFilter {
	if x != nil {
		return x.Filters
	}
	return nil
}

type SubscribeRequestFilterAccountsFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Filter:
	//	*SubscribeRequestFilterAccountsFilter_Memcmp
	//	*SubscribeRequestFilterAccountsFilter_Datasize
	//	*SubscribeRequestFilterAccountsFilter_Lamports
	Filter isSubscribeRequestFilterAccountsFilter_Filter `protobuf_oneof:"filter"`
}

func (x *SubscribeRequestFilterAccountsFilter) Reset() {
	*x = SubscribeRequestFilterAccountsFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jetstream_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeRequestFilterAccountsFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequestFilterAccountsFilter) ProtoMessage() {}

func (x *SubscribeRequestFilterAccountsFilter) ProtoReflect() protoreflect.Message {
	mi := &file_jetstream_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequestFilterAccountsFilter.ProtoReflect.Descriptor instead.
func (*SubscribeRequestFilterAccountsFilter) Descriptor() ([]byte, []int) {
	return file_jetstream_proto_rawDescGZIP(), []int{3}
}

func (m *SubscribeRequestFilterAccountsFilter) GetFilter() isSubscribeRequestFilterAccountsFilter_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (x *SubscribeRequestFilterAccountsFilter) GetMemcmp() *SubscribeRequestFilterAccountsFilterMemcmp {
	if x, ok := x.GetFilter().(*SubscribeRequestFilterAccountsFilter_Memcmp); ok {
		return x.Memcmp
	}
	return nil
}

func (x *SubscribeRequestFilterAccountsFilter) GetDatasize() uint64 {
	if x, ok := x.GetFilter().(*SubscribeRequestFilterAccountsFilter_Datasize); ok {
		return x.Datasize
	}
	return 0
}

func (x *SubscribeRequestFilterAccountsFilter) GetLamports() *SubscribeRequestFilterAccountsFilterLamports {
	if x, ok := x.GetFilter().(*SubscribeRequestFilterAccountsFilter_Lamports); ok {
		return x.Lamports
	}
	return nil
}

type isSubscribeRequestFilterAccountsFilter_Filter interface {
	isSubscribeRequestFilterAccountsFilter_Filter()
}

type SubscribeRequestFilterAccountsFilter_Memcmp struct {
	Memcmp *SubscribeRequestFilterAccountsFilterMemcmp `protobuf:"bytes,1,opt,name=memcmp,proto3,oneof"`
}

type SubscribeRequestFilterAccountsFilter_Datasize struct {
	Datasize uint64 `protobuf:"varint,2,opt,name=datasize,proto3,oneof"`
}

type SubscribeRequestFilterAccountsFilter_Lamports struct {
	Lamports *SubscribeRequestFilterAccountsFilterLamports `protobuf:"bytes,3,opt,name=lamports,proto3,oneof"`
}

func (*SubscribeRequestFilterAccountsFilter_Memcmp) isSubscribeRequestFilterAccountsFilter_Filter() {}

func (*SubscribeRequestFilterAccountsFilter_Datasize) isSubscribeRequestFilterAccountsFilter_Filter() {
}

func (*SubscribeRequestFilterAccountsFilter_Lamports) isSubscribeRequestFilterAccountsFilter_Filter() {
}

type SubscribeRequestFilterAccountsFilterMemcmp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset uint64 `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	// Types that are assignable to Data:
	//	*SubscribeRequestFilterAccountsFilterMemcmp_Bytes
	//	*SubscribeRequestFilterAccountsFilterMemcmp_Base58
	//	*SubscribeRequestFilterAccountsFilterMemcmp_Base64
	Data isSubscribeRequestFilterAccountsFilterMemcmp_Data `protobuf_oneof:"data"`
}

func (x *SubscribeRequestFilterAccountsFilterMemcmp) Reset() {
	*x = SubscribeRequestFilterAccountsFilterMemcmp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jetstream_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeRequestFilterAccountsFilterMemcmp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequestFilterAccountsFilterMemcmp) ProtoMessage() {}

func (x *SubscribeRequestFilterAccountsFilterMemcmp) ProtoReflect() protoreflect.Message {
	mi := &file_jetstream_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequestFilterAccountsFilterMemcmp.ProtoReflect.Descriptor instead.
func (*SubscribeRequestFilterAccountsFilterMemcmp) Descriptor() ([]byte, []int) {
	return file_jetstream_proto_rawDescGZIP(), []int{4}
}

func (x *SubscribeRequestFilterAccountsFilterMemcmp) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (m *SubscribeRequestFilterAccountsFilterMemcmp) GetData() isSubscribeRequestFilterAccountsFilterMemcmp_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *SubscribeRequestFilterAccountsFilterMemcmp) GetBytes() []byte {
	if x, ok := x.GetData().(*SubscribeRequestFilterAccountsFilterMemcmp_Bytes); ok {
		return x.Bytes
	}
	return nil
}

func (x *SubscribeRequestFilterAccountsFilterMemcmp) GetBase58() string {
	if x, ok := x.GetData().(*SubscribeRequestFilterAccountsFilterMemcmp_Base58); ok {
		return x.Base58
	}
	return ""
}

func (x *SubscribeRequestFilterAccountsFilterMemcmp) GetBase64() string {
	if x, ok := x.GetData().(*SubscribeRequestFilterAccountsFilterMemcmp_Base64); ok {
		return x.Base64
	}
	return ""
}

type isSubscribeRequestFilterAccountsFilterMemcmp_Data interface {
	isSubscribeRequestFilterAccountsFilterMemcmp_Data()
}

type SubscribeRequestFilterAccountsFilterMemcmp_Bytes struct {
	Bytes []byte `protobuf:"bytes,2,opt,name=bytes,proto3,oneof"`
}

type SubscribeRequestFilterAccountsFilterMemcmp_Base58 struct {
	Base58 string `protobuf:"bytes,3,opt,name=base58,proto3,oneof"`
}

type SubscribeRequestFilterAccountsFilterMemcmp_Base64 struct {
	Base64 string `protobuf:"bytes,4,opt,name=base64,proto3,oneof"`
}

func (*SubscribeRequestFilterAccountsFilterMemcmp_Bytes) isSubscribeRequestFilterAccountsFilterMemcmp_Data() {
}

func (*SubscribeRequestFilterAccountsFilterMemcmp_Base58) isSubscribeRequestFilterAccountsFilterMemcmp_Data() {
}

func (*SubscribeRequestFilterAccountsFilterMemcmp_Base64) isSubscribeRequestFilterAccountsFilterMemcmp_Data() {
}

type SubscribeRequestFilterAccountsFilterLamports struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Cmp:
	//	*SubscribeRequestFilterAccountsFilterLamports_Eq
	//	*SubscribeRequestFilterAccountsFilterLamports_Ne
	//	*SubscribeRequestFilterAccountsFilterLamports_Lt
	//	*SubscribeRequestFilterAccountsFilterLamports_Gt
	Cmp isSubscribeRequestFilterAccountsFilterLamports_Cmp `protobuf_oneof:"cmp"`
}

func (x *SubscribeRequestFilterAccountsFilterLamports) Reset() {
	*x = SubscribeRequestFilterAccountsFilterLamports{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jetstream_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeRequestFilterAccountsFilterLamports) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequestFilterAccountsFilterLamports) ProtoMessage() {}

func (x *SubscribeRequestFilterAccountsFilterLamports) ProtoReflect() protoreflect.Message {
	mi := &file_jetstream_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequestFilterAccountsFilterLamports.ProtoReflect.Descriptor instead.
func (*SubscribeRequestFilterAccountsFilterLamports) Descriptor() ([]byte, []int) {
	return file_jetstream_proto_rawDescGZIP(), []int{5}
}

func (m *SubscribeRequestFilterAccountsFilterLamports) GetCmp() isSubscribeRequestFilterAccountsFilterLamports_Cmp {
	if m != nil {
		return m.Cmp
	}
	return nil
}

func (x *SubscribeRequestFilterAccountsFilterLamports) GetEq() uint64 {
	if x, ok := x.GetCmp().(*SubscribeRequestFilterAccountsFilterLamports_Eq); ok {
		return x.Eq
	}
	return 0
}

func (x *SubscribeRequestFilterAccountsFilterLamports) GetNe() uint64 {
	if x, ok := x.GetCmp().(*SubscribeRequestFilterAccountsFilterLamports_Ne); ok {
		return x.Ne
	}
	return 0
}

func (x *SubscribeRequestFilterAccountsFilterLamports) GetLt() uint64 {
	if x, ok := x.GetCmp().(*SubscribeRequestFilterAccountsFilterLamports_Lt); ok {
		return x.Lt
	}
	return 0
}

func (x *SubscribeRequestFilterAccountsFilterLamports) GetGt() uint64 {
	if x, ok := x.GetCmp().(*SubscribeRequestFilterAccountsFilterLamports_Gt); ok {
		return x.Gt
	}
	return 0
}

type isSubscribeRequestFilterAccountsFilterLamports_Cmp interface {
	isSubscribeRequestFilterAccountsFilterLamports_Cmp()
}

type SubscribeRequestFilterAccountsFilterLamports_Eq struct {
	Eq uint64 `protobuf:"varint,1,opt,name=eq,proto3,oneof"`
}

type SubscribeRequestFilterAccountsFilterLamports_Ne struct {
	Ne uint64 `protobuf:"varint,2,opt,name=ne,proto3,oneof"`
}

type SubscribeRequestFilterAccountsFilterLamports_Lt struct {
	Lt uint64 `protobuf:"varint,3,opt,name=lt,proto3,oneof"`
}

type SubscribeRequestFilterAccountsFilterLamports_Gt struct {
	Gt uint64 `protobuf:"varint,4,opt,name=gt,proto3,oneof"`
}

func (*SubscribeRequestFilterAccountsFilterLamports_Eq) isSubscribeRequestFilterAccountsFilterLamports_Cmp() {
}

func (*SubscribeRequestFilterAccountsFilterLamports_Ne) isSubscribeRequestFilterAccountsFilterLamports_Cmp() {
}

func (*SubscribeRequestFilterAccountsFilterLamports_Lt) isSubscribeRequestFilterAccountsFilterLamports_Cmp() {
}

func (*SubscribeRequestFilterAccountsFilterLamports_Gt) isSubscribeRequestFilterAccountsFilterLamports_Cmp() {
}

type SubscribeRequestPing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SubscribeRequestPing) Reset() {
	*x = SubscribeRequestPing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jetstream_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeRequestPing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequestPing) ProtoMessage() {}

func (x *SubscribeRequestPing) ProtoReflect() protoreflect.Message {
	mi := &file_jetstream_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequestPing.ProtoReflect.Descriptor instead.
func (*SubscribeRequestPing) Descriptor() ([]byte, []int) {
	return file_jetstream_proto_rawDescGZIP(), []int{6}
}

func (x *SubscribeRequestPing) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// ============= Subscribe Updates =============
type SubscribeUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters   []string             `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Types that are assignable to UpdateOneof:
	//	*SubscribeUpdate_Transaction
	//	*SubscribeUpdate_Account
	//	*SubscribeUpdate_Ping
	//	*SubscribeUpdate_Pong
	UpdateOneof isSubscribeUpdate_UpdateOneof `protobuf_oneof:"update_oneof"`
}

func (x *SubscribeUpdate) Reset() {
	*x = SubscribeUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jetstream_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeUpdate) ProtoMessage() {}

func (x *SubscribeUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_jetstream_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeUpdate.ProtoReflect.Descriptor instead.
func (*SubscribeUpdate) Descriptor() ([]byte, []int) {
	return file_jetstream_proto_rawDescGZIP(), []int{7}
}

func (x *SubscribeUpdate) GetFilters() []string {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *SubscribeUpdate) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (m *SubscribeUpdate) GetUpdateOneof() isSubscribeUpdate_UpdateOneof {
	if m != nil {
		return m.UpdateOneof
	}
	return nil
}

func (x *SubscribeUpdate) GetTransaction() *SubscribeUpdateTransaction {
	if x, ok := x.GetUpdateOneof().(*SubscribeUpdate_Transaction); ok {
		return x.Transaction
	}
	return nil
}

func (x *SubscribeUpdate) GetAccount() *SubscribeUpdateAccount {
	if x, ok := x.GetUpdateOneof().(*SubscribeUpdate_Account); ok {
		return x.Account
	}
	return nil
}

func (x *SubscribeUpdate) GetPing() *SubscribeUpdatePing {
	if x, ok := x.GetUpdateOneof().(*SubscribeUpdate_Ping); ok {
		return x.Ping
	}
	return nil
}

func (x *SubscribeUpdate) GetPong() *SubscribeUpdatePong {
	if x, ok := x.GetUpdateOneof().(*SubscribeUpdate_Pong); ok {
		return x.Pong
	}
	return nil
}

type isSubscribeUpdate_UpdateOneof interface {
	isSubscribeUpdate_UpdateOneof()
}

type SubscribeUpdate_Transaction struct {
	Transaction *SubscribeUpdateTransaction `protobuf:"bytes,3,opt,name=transaction,proto3,oneof"`
}

type SubscribeUpdate_Account struct {
	Account *SubscribeUpdateAccount `protobuf:"bytes,4,opt,name=account,proto3,oneof"`
}

type SubscribeUpdate_Ping struct {
	Ping *SubscribeUpdatePing `protobuf:"bytes,5,opt,name=ping,proto3,oneof"`
}

type SubscribeUpdate_Pong struct {
	Pong *SubscribeUpdatePong `protobuf:"bytes,6,opt,name=pong,proto3,oneof"`
}

func (*SubscribeUpdate_Transaction) isSubscribeUpdate_UpdateOneof() {}

func (*SubscribeUpdate_Account) isSubscribeUpdate_UpdateOneof() {}

func (*SubscribeUpdate_Ping) isSubscribeUpdate_UpdateOneof() {}

func (*SubscribeUpdate_Pong) isSubscribeUpdate_UpdateOneof() {}

type SubscribeUpdateTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transaction *SubscribeUpdateTransactionInfo `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	Slot        uint64                          `protobuf:"varint,2,opt,name=slot,proto3" json:"slot,omitempty"`
}

func (x *SubscribeUpdateTransaction) Reset() {
	*x = SubscribeUpdateTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jetstream_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeUpdateTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeUpdateTransaction) ProtoMessage() {}

func (x *SubscribeUpdateTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_jetstream_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeUpdateTransaction.ProtoReflect.Descriptor instead.
func (*SubscribeUpdateTransaction) Descriptor() ([]byte, []int) {
	return file_jetstream_proto_rawDescGZIP(), []int{8}
}

func (x *SubscribeUpdateTransaction) GetTransaction() *SubscribeUpdateTransactionInfo {
	if x != nil {
		return x.Transaction
	}
	return nil
}

func (x *SubscribeUpdateTransaction) GetSlot() uint64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

type SubscribeUpdateTransactionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature                   []byte                       `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Slot                        uint64                       `protobuf:"varint,2,opt,name=slot,proto3" json:"slot,omitempty"`
	NumRequiredSignatures       uint32                       `protobuf:"varint,3,opt,name=num_required_signatures,json=numRequiredSignatures,proto3" json:"num_required_signatures,omitempty"`
	NumReadonlySignedAccounts   uint32                       `protobuf:"varint,4,opt,name=num_readonly_signed_accounts,json=numReadonlySignedAccounts,proto3" json:"num_readonly_signed_accounts,omitempty"`
	NumReadonlyUnsignedAccounts uint32                       `protobuf:"varint,5,opt,name=num_readonly_unsigned_accounts,json=numReadonlyUnsignedAccounts,proto3" json:"num_readonly_unsigned_accounts,omitempty"`
	RecentBlockhash             []byte                       `protobuf:"bytes,6,opt,name=recent_blockhash,json=recentBlockhash,proto3" json:"recent_blockhash,omitempty"`
	Signatures                  [][]byte                     `protobuf:"bytes,7,rep,name=signatures,proto3" json:"signatures,omitempty"`
	AccountKeys                 [][]byte                     `protobuf:"bytes,8,rep,name=account_keys,json=accountKeys,proto3" json:"account_keys,omitempty"`
	Instructions                []*CompiledInstruction       `protobuf:"bytes,9,rep,name=instructions,proto3" json:"instructions,omitempty"`
	AddressTableLookups         []*MessageAddressTableLookup `protobuf:"bytes,10,rep,name=address_table_lookups,json=addressTableLookups,proto3" json:"address_table_lookups,omitempty"`
}

func (x *SubscribeUpdateTransactionInfo) Reset() {
	*x = SubscribeUpdateTransactionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jetstream_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeUpdateTransactionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeUpdateTransactionInfo) ProtoMessage() {}

func (x *SubscribeUpdateTransactionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_jetstream_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeUpdateTransactionInfo.ProtoReflect.Descriptor instead.
func (*SubscribeUpdateTransactionInfo) Descriptor() ([]byte, []int) {
	return file_jetstream_proto_rawDescGZIP(), []int{9}
}

func (x *SubscribeUpdateTransactionInfo) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *SubscribeUpdateTransactionInfo) GetSlot() uint64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *SubscribeUpdateTransactionInfo) GetNumRequiredSignatures() uint32 {
	if x != nil {
		return x.NumRequiredSignatures
	}
	return 0
}

func (x *SubscribeUpdateTransactionInfo) GetNumReadonlySignedAccounts() uint32 {
	if x != nil {
		return x.NumReadonlySignedAccounts
	}
	return 0
}

func (x *SubscribeUpdateTransactionInfo) GetNumReadonlyUnsignedAccounts() uint32 {
	if x != nil {
		return x.NumReadonlyUnsignedAccounts
	}
	return 0
}

func (x *SubscribeUpdateTransactionInfo) GetRecentBlockhash() []byte {
	if x != nil {
		return x.RecentBlockhash
	}
	return nil
}

func (x *SubscribeUpdateTransactionInfo) GetSignatures() [][]byte {
	if x != nil {
		return x.Signatures
	}
	return nil
}

func (x *SubscribeUpdateTransactionInfo) GetAccountKeys() [][]byte {
	if x != nil {
		return x.AccountKeys
	}
	return nil
}

func (x *SubscribeUpdateTransactionInfo) GetInstructions() []*CompiledInstruction {
	if x != nil {
		return x.Instructions
	}
	return nil
}

func (x *SubscribeUpdateTransactionInfo) GetAddressTableLookups() []*MessageAddressTableLookup {
	if x != nil {
		return x.AddressTableLookups
	}
	return nil
}

type SubscribeUpdateAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account   *SubscribeUpdateAccountInfo `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Slot      uint64                      `protobuf:"varint,2,opt,name=slot,proto3" json:"slot,omitempty"`
	IsStartup bool                        `protobuf:"varint,3,opt,name=is_startup,json=isStartup,proto3" json:"is_startup,omitempty"`
}

func (x *SubscribeUpdateAccount) Reset() {
	*x = SubscribeUpdateAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jetstream_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeUpdateAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeUpdateAccount) ProtoMessage() {}

func (x *SubscribeUpdateAccount) ProtoReflect() protoreflect.Message {
	mi := &file_jetstream_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeUpdateAccount.ProtoReflect.Descriptor instead.
func (*SubscribeUpdateAccount) Descriptor() ([]byte, []int) {
	return file_jetstream_proto_rawDescGZIP(), []int{10}
}

func (x *SubscribeUpdateAccount) GetAccount() *SubscribeUpdateAccountInfo {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *SubscribeUpdateAccount) GetSlot() uint64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *SubscribeUpdateAccount) GetIsStartup() bool {
	if x != nil {
		return x.IsStartup
	}
	return false
}

type SubscribeUpdateAccountInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pubkey       []byte `protobuf:"bytes,1,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	Lamports     uint64 `protobuf:"varint,2,opt,name=lamports,proto3" json:"lamports,omitempty"`
	Owner        []byte `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty"`
	Executable   bool   `protobuf:"varint,4,opt,name=executable,proto3" json:"executable,omitempty"`
	RentEpoch    uint64 `protobuf:"varint,5,opt,name=rent_epoch,json=rentEpoch,proto3" json:"rent_epoch,omitempty"`
	Data         []byte `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
	WriteVersion uint64 `protobuf:"varint,7,opt,name=write_version,json=writeVersion,proto3" json:"write_version,omitempty"`
	TxnSignature []byte `protobuf:"bytes,8,opt,name=txn_signature,json=txnSignature,proto3,oneof" json:"txn_signature,omitempty"`
}

func (x *SubscribeUpdateAccountInfo) Reset() {
	*x = SubscribeUpdateAccountInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jetstream_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeUpdateAccountInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeUpdateAccountInfo) ProtoMessage() {}

func (x *SubscribeUpdateAccountInfo) ProtoReflect() protoreflect.Message {
	mi := &file_jetstream_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeUpdateAccountInfo.ProtoReflect.Descriptor instead.
func (*SubscribeUpdateAccountInfo) Descriptor() ([]byte, []int) {
	return file_jetstream_proto_rawDescGZIP(), []int{11}
}

func (x *SubscribeUpdateAccountInfo) GetPubkey() []byte {
	if x != nil {
		return x.Pubkey
	}
	return nil
}

func (x *SubscribeUpdateAccountInfo) GetLamports() uint64 {
	if x != nil {
		return x.Lamports
	}
	return 0
}

func (x *SubscribeUpdateAccountInfo) GetOwner() []byte {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *SubscribeUpdateAccountInfo) GetExecutable() bool {
	if x != nil {
		return x.Executable
	}
	return false
}

func (x *SubscribeUpdateAccountInfo) GetRentEpoch() uint64 {
	if x != nil {
		return x.RentEpoch
	}
	return 0
}

func (x *SubscribeUpdateAccountInfo) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SubscribeUpdateAccountInfo) GetWriteVersion() uint64 {
	if x != nil {
		return x.WriteVersion
	}
	return 0
}

func (x *SubscribeUpdateAccountInfo) GetTxnSignature() []byte {
	if x != nil {
		return x.TxnSignature
	}
	return nil
}

type SubscribeUpdatePing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SubscribeUpdatePing) Reset() {
	*x = SubscribeUpdatePing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jetstream_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeUpdatePing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeUpdatePing) ProtoMessage() {}

func (x *SubscribeUpdatePing) ProtoReflect() protoreflect.Message {
	mi := &file_jetstream_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeUpdatePing.ProtoReflect.Descriptor instead.
func (*SubscribeUpdatePing) Descriptor() ([]byte, []int) {
	return file_jetstream_proto_rawDescGZIP(), []int{12}
}

type SubscribeUpdatePong struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SubscribeUpdatePong) Reset() {
	*x = SubscribeUpdatePong{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jetstream_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeUpdatePong) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeUpdatePong) ProtoMessage() {}

func (x *SubscribeUpdatePong) ProtoReflect() protoreflect.Message {
	mi := &file_jetstream_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeUpdatePong.ProtoReflect.Descriptor instead.
func (*SubscribeUpdatePong) Descriptor() ([]byte, []int) {
	return file_jetstream_proto_rawDescGZIP(), []int{13}
}

func (x *SubscribeUpdatePong) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type MessageAddressTableLookup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountKey      []byte `protobuf:"bytes,1,opt,name=account_key,json=accountKey,proto3" json:"account_key,omitempty"`
	WritableIndexes []byte `protobuf:"bytes,2,opt,name=writable_indexes,json=writableIndexes,proto3" json:"writable_indexes,omitempty"`
	ReadonlyIndexes []byte `protobuf:"bytes,3,opt,name=readonly_indexes,json=readonlyIndexes,proto3" json:"readonly_indexes,omitempty"`
}

func (x *MessageAddressTableLookup) Reset() {
	*x = MessageAddressTableLookup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jetstream_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageAddressTableLookup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageAddressTableLookup) ProtoMessage() {}

func (x *MessageAddressTableLookup) ProtoReflect() protoreflect.Message {
	mi := &file_jetstream_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageAddressTableLookup.ProtoReflect.Descriptor instead.
func (*MessageAddressTableLookup) Descriptor() ([]byte, []int) {
	return file_jetstream_proto_rawDescGZIP(), []int{14}
}

func (x *MessageAddressTableLookup) GetAccountKey() []byte {
	if x != nil {
		return x.AccountKey
	}
	return nil
}

func (x *MessageAddressTableLookup) GetWritableIndexes() []byte {
	if x != nil {
		return x.WritableIndexes
	}
	return nil
}

func (x *MessageAddressTableLookup) GetReadonlyIndexes() []byte {
	if x != nil {
		return x.ReadonlyIndexes
	}
	return nil
}

type CompiledInstruction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProgramIdIndex uint32 `protobuf:"varint,1,opt,name=program_id_index,json=programIdIndex,proto3" json:"program_id_index,omitempty"`
	Accounts       []byte `protobuf:"bytes,2,opt,name=accounts,proto3" json:"accounts,omitempty"`
	Data           []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CompiledInstruction) Reset() {
	*x = CompiledInstruction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jetstream_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompiledInstruction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompiledInstruction) ProtoMessage() {}

func (x *CompiledInstruction) ProtoReflect() protoreflect.Message {
	mi := &file_jetstream_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompiledInstruction.ProtoReflect.Descriptor instead.
func (*CompiledInstruction) Descriptor() ([]byte, []int) {
	return file_jetstream_proto_rawDescGZIP(), []int{15}
}

func (x *CompiledInstruction) GetProgramIdIndex() uint32 {
	if x != nil {
		return x.ProgramIdIndex
	}
	return 0
}

func (x *CompiledInstruction) GetAccounts() []byte {
	if x != nil {
		return x.Accounts
	}
	return nil
}

func (x *CompiledInstruction) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// ============= Parsed Instruction Messages =============
type SubscribeParsedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ping *SubscribeRequestPing `protobuf:"bytes,1,opt,name=ping,proto3,oneof" json:"ping,omitempty"`
}

func (x *SubscribeParsedRequest) Reset() {
	*x = SubscribeParsedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jetstream_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeParsedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeParsedRequest) ProtoMessage() {}

func (x *SubscribeParsedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jetstream_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeParsedRequest.ProtoReflect.Descriptor instead.
func (*SubscribeParsedRequest) Descriptor() ([]byte, []int) {
	return file_jetstream_proto_rawDescGZIP(), []int{16}
}

func (x *SubscribeParsedRequest) GetPing() *SubscribeRequestPing {
	if x != nil {
		return x.Ping
	}
	return nil
}

type Instruction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to InstructionOneof:
	//	*Instruction_Initialize
	//	*Instruction_SetParams
	//	*Instruction_Create
	//	*Instruction_Buy
	//	*Instruction_Sell
	//	*Instruction_Withdraw
	InstructionOneof isInstruction_InstructionOneof `protobuf_oneof:"instruction_oneof"`
}

func (x *Instruction) Reset() {
	*x = Instruction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jetstream_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Instruction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instruction) ProtoMessage() {}

func (x *Instruction) ProtoReflect() protoreflect.Message {
	mi := &file_jetstream_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instruction.ProtoReflect.Descriptor instead.
func (*Instruction) Descriptor() ([]byte, []int) {
	return file_jetstream_proto_rawDescGZIP(), []int{17}
}

func (m *Instruction) GetInstructionOneof() isInstruction_InstructionOneof {
	if m != nil {
		return m.InstructionOneof
	}
	return nil
}

func (x *Instruction) GetInitialize() *Initialize {
	if x, ok := x.GetInstructionOneof().(*Instruction_Initialize); ok {
		return x.Initialize
	}
	return nil
}

func (x *Instruction) GetSetParams() *SetParams {
	if x, ok := x.GetInstructionOneof().(*Instruction_SetParams); ok {
		return x.SetParams
	}
	return nil
}

func (x *Instruction) GetCreate() *Create {
	if x, ok := x.GetInstructionOneof().(*Instruction_Create); ok {
		return x.Create
	}
	return nil
}

func (x *Instruction) GetBuy() *Buy {
	if x, ok := x.GetInstructionOneof().(*Instruction_Buy); ok {
		return x.Buy
	}
	return nil
}

func (x *Instruction) GetSell() *Sell {
	if x, ok := x.GetInstructionOneof().(*Instruction_Sell); ok {
		return x.Sell
	}
	return nil
}

func (x *Instruction) GetWithdraw() *Withdraw {
	if x, ok := x.GetInstructionOneof().(*Instruction_Withdraw); ok {
		return x.Withdraw
	}
	return nil
}

type isInstruction_InstructionOneof interface {
	isInstruction_InstructionOneof()
}

type Instruction_Initialize struct {
	Initialize *Initialize `protobuf:"bytes,1,opt,name=initialize,proto3,oneof"`
}

type Instruction_SetParams struct {
	SetParams *SetParams `protobuf:"bytes,2,opt,name=set_params,json=setParams,proto3,oneof"`
}

type Instruction_Create struct {
	Create *Create `protobuf:"bytes,3,opt,name=create,proto3,oneof"`
}

type Instruction_Buy struct {
	Buy *Buy `protobuf:"bytes,4,opt,name=buy,proto3,oneof"`
}

type Instruction_Sell struct {
	Sell *Sell `protobuf:"bytes,5,opt,name=sell,proto3,oneof"`
}

type Instruction_Withdraw struct {
	Withdraw *Withdraw `protobuf:"bytes,6,opt,name=withdraw,proto3,oneof"`
}

func (*Instruction_Initialize) isInstruction_InstructionOneof() {}

func (*Instruction_SetParams) isInstruction_InstructionOneof() {}

func (*Instruction_Create) isInstruction_InstructionOneof() {}

func (*Instruction_Buy) isInstruction_InstructionOneof() {}

func (*Instruction_Sell) isInstruction_InstructionOneof() {}

func (*Instruction_Withdraw) isInstruction_InstructionOneof() {}

type Initialize struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Initialize) Reset() {
	*x = Initialize{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jetstream_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Initialize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Initialize) ProtoMessage() {}

func (x *Initialize) ProtoReflect() protoreflect.Message {
	mi := &file_jetstream_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Initialize.ProtoReflect.Descriptor instead.
func (*Initialize) Descriptor() ([]byte, []int) {
	return file_jetstream_proto_rawDescGZIP(), []int{18}
}

type SetParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeeRecipient                []byte `protobuf:"bytes,1,opt,name=fee_recipient,json=feeRecipient,proto3" json:"fee_recipient,omitempty"`
	InitialVirtualTokenReserves uint64 `protobuf:"varint,2,opt,name=initial_virtual_token_reserves,json=initialVirtualTokenReserves,proto3" json:"initial_virtual_token_reserves,omitempty"`
	InitialVirtualSolReserves   uint64 `protobuf:"varint,3,opt,name=initial_virtual_sol_reserves,json=initialVirtualSolReserves,proto3" json:"initial_virtual_sol_reserves,omitempty"`
	InitialRealTokenReserves    uint64 `protobuf:"varint,4,opt,name=initial_real_token_reserves,json=initialRealTokenReserves,proto3" json:"initial_real_token_reserves,omitempty"`
	TokenTotalSupply            uint64 `protobuf:"varint,5,opt,name=token_total_supply,json=tokenTotalSupply,proto3" json:"token_total_supply,omitempty"`
	FeeBasisPoints              uint64 `protobuf:"varint,6,opt,name=fee_basis_points,json=feeBasisPoints,proto3" json:"fee_basis_points,omitempty"`
}

func (x *SetParams) Reset() {
	*x = SetParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jetstream_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetParams) ProtoMessage() {}

func (x *SetParams) ProtoReflect() protoreflect.Message {
	mi := &file_jetstream_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetParams.ProtoReflect.Descriptor instead.
func (*SetParams) Descriptor() ([]byte, []int) {
	return file_jetstream_proto_rawDescGZIP(), []int{19}
}

func (x *SetParams) GetFeeRecipient() []byte {
	if x != nil {
		return x.FeeRecipient
	}
	return nil
}

func (x *SetParams) GetInitialVirtualTokenReserves() uint64 {
	if x != nil {
		return x.InitialVirtualTokenReserves
	}
	return 0
}

func (x *SetParams) GetInitialVirtualSolReserves() uint64 {
	if x != nil {
		return x.InitialVirtualSolReserves
	}
	return 0
}

func (x *SetParams) GetInitialRealTokenReserves() uint64 {
	if x != nil {
		return x.InitialRealTokenReserves
	}
	return 0
}

func (x *SetParams) GetTokenTotalSupply() uint64 {
	if x != nil {
		return x.TokenTotalSupply
	}
	return 0
}

func (x *SetParams) GetFeeBasisPoints() uint64 {
	if x != nil {
		return x.FeeBasisPoints
	}
	return 0
}

type Create struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Symbol string `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Uri    string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
}

func (x *Create) Reset() {
	*x = Create{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jetstream_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Create) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Create) ProtoMessage() {}

func (x *Create) ProtoReflect() protoreflect.Message {
	mi := &file_jetstream_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Create.ProtoReflect.Descriptor instead.
func (*Create) Descriptor() ([]byte, []int) {
	return file_jetstream_proto_rawDescGZIP(), []int{20}
}

func (x *Create) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Create) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Create) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

type Buy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount     uint64 `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	MaxSolCost uint64 `protobuf:"varint,2,opt,name=max_sol_cost,json=maxSolCost,proto3" json:"max_sol_cost,omitempty"`
}

func (x *Buy) Reset() {
	*x = Buy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jetstream_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Buy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Buy) ProtoMessage() {}

func (x *Buy) ProtoReflect() protoreflect.Message {
	mi := &file_jetstream_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Buy.ProtoReflect.Descriptor instead.
func (*Buy) Descriptor() ([]byte, []int) {
	return file_jetstream_proto_rawDescGZIP(), []int{21}
}

func (x *Buy) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Buy) GetMaxSolCost() uint64 {
	if x != nil {
		return x.MaxSolCost
	}
	return 0
}

type Sell struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount       uint64 `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	MinSolOutput uint64 `protobuf:"varint,2,opt,name=min_sol_output,json=minSolOutput,proto3" json:"min_sol_output,omitempty"`
}

func (x *Sell) Reset() {
	*x = Sell{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jetstream_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sell) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sell) ProtoMessage() {}

func (x *Sell) ProtoReflect() protoreflect.Message {
	mi := &file_jetstream_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sell.ProtoReflect.Descriptor instead.
func (*Sell) Descriptor() ([]byte, []int) {
	return file_jetstream_proto_rawDescGZIP(), []int{22}
}

func (x *Sell) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Sell) GetMinSolOutput() uint64 {
	if x != nil {
		return x.MinSolOutput
	}
	return 0
}

type Withdraw struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Withdraw) Reset() {
	*x = Withdraw{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jetstream_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Withdraw) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Withdraw) ProtoMessage() {}

func (x *Withdraw) ProtoReflect() protoreflect.Message {
	mi := &file_jetstream_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Withdraw.ProtoReflect.Descriptor instead.
func (*Withdraw) Descriptor() ([]byte, []int) {
	return file_jetstream_proto_rawDescGZIP(), []int{23}
}

// For SubscribeParsed RPC
type SubscribeUpdateParsedTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature       []byte                  `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Slot            uint64                  `protobuf:"varint,2,opt,name=slot,proto3" json:"slot,omitempty"`
	Account         *SubscribeUpdateAccount `protobuf:"bytes,3,opt,name=account,proto3" json:"account,omitempty"`
	RecentBlockhash []byte                  `protobuf:"bytes,4,opt,name=recent_blockhash,json=recentBlockhash,proto3" json:"recent_blockhash,omitempty"`
	Signatures      [][]byte                `protobuf:"bytes,5,rep,name=signatures,proto3" json:"signatures,omitempty"`
	Instructions    []*Instruction          `protobuf:"bytes,6,rep,name=instructions,proto3" json:"instructions,omitempty"`
}

func (x *SubscribeUpdateParsedTransaction) Reset() {
	*x = SubscribeUpdateParsedTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jetstream_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeUpdateParsedTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeUpdateParsedTransaction) ProtoMessage() {}

func (x *SubscribeUpdateParsedTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_jetstream_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeUpdateParsedTransaction.ProtoReflect.Descriptor instead.
func (*SubscribeUpdateParsedTransaction) Descriptor() ([]byte, []int) {
	return file_jetstream_proto_rawDescGZIP(), []int{24}
}

func (x *SubscribeUpdateParsedTransaction) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *SubscribeUpdateParsedTransaction) GetSlot() uint64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *SubscribeUpdateParsedTransaction) GetAccount() *SubscribeUpdateAccount {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *SubscribeUpdateParsedTransaction) GetRecentBlockhash() []byte {
	if x != nil {
		return x.RecentBlockhash
	}
	return nil
}

func (x *SubscribeUpdateParsedTransaction) GetSignatures() [][]byte {
	if x != nil {
		return x.Signatures
	}
	return nil
}

func (x *SubscribeUpdateParsedTransaction) GetInstructions() []*Instruction {
	if x != nil {
		return x.Instructions
	}
	return nil
}

// ============= Non-streaming Methods =============
type PingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jetstream_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jetstream_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_jetstream_proto_rawDescGZIP(), []int{25}
}

func (x *PingRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type PongResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *PongResponse) Reset() {
	*x = PongResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jetstream_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PongResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PongResponse) ProtoMessage() {}

func (x *PongResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jetstream_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PongResponse.ProtoReflect.Descriptor instead.
func (*PongResponse) Descriptor() ([]byte, []int) {
	return file_jetstream_proto_rawDescGZIP(), []int{26}
}

func (x *PongResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetVersionRequest) Reset() {
	*x = GetVersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jetstream_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionRequest) ProtoMessage() {}

func (x *GetVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jetstream_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionRequest.ProtoReflect.Descriptor instead.
func (*GetVersionRequest) Descriptor() ([]byte, []int) {
	return file_jetstream_proto_rawDescGZIP(), []int{27}
}

type GetVersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *GetVersionResponse) Reset() {
	*x = GetVersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jetstream_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionResponse) ProtoMessage() {}

func (x *GetVersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jetstream_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionResponse.ProtoReflect.Descriptor instead.
func (*GetVersionResponse) Descriptor() ([]byte, []int) {
	return file_jetstream_proto_rawDescGZIP(), []int{28}
}

func (x *GetVersionResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type GetSlotResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slot uint64 `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty"`
}

func (x *GetSlotResponse) Reset() {
	*x = GetSlotResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jetstream_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSlotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSlotResponse) ProtoMessage() {}

func (x *GetSlotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jetstream_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSlotResponse.ProtoReflect.Descriptor instead.
func (*GetSlotResponse) Descriptor() ([]byte, []int) {
	return file_jetstream_proto_rawDescGZIP(), []int{29}
}

func (x *GetSlotResponse) GetSlot() uint64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

var File_jetstream_proto protoreflect.FileDescriptor

var file_jetstream_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x6a, 0x65, 0x74, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x6a, 0x65, 0x74, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc7, 0x03,
	0x0a, 0x10, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x51, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6a, 0x65, 0x74, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x45, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6a, 0x65, 0x74, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x38, 0x0a, 0x04,
	0x70, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6a, 0x65, 0x74,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x04, 0x70,
	0x69, 0x6e, 0x67, 0x88, 0x01, 0x01, 0x1a, 0x6e, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x43, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6a,
	0x65, 0x74, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x66, 0x0a, 0x0d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3f, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6a, 0x65, 0x74, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x70, 0x69, 0x6e, 0x67, 0x22, 0xa1, 0x01, 0x0a, 0x22, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x27,
	0x0a, 0x0f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x12, 0x29, 0x0a, 0x10, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22, 0x9b, 0x01, 0x0a, 0x1e,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x49,
	0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x6a, 0x65, 0x74, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0xf6, 0x01, 0x0a, 0x24, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x12, 0x4f, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x63, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x35, 0x2e, 0x6a, 0x65, 0x74, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x63, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x06, 0x6d, 0x65, 0x6d,
	0x63, 0x6d, 0x70, 0x12, 0x1c, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x73, 0x69, 0x7a,
	0x65, 0x12, 0x55, 0x0a, 0x08, 0x6c, 0x61, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x6a, 0x65, 0x74, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x4c, 0x61, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x48, 0x00, 0x52, 0x08,
	0x6c, 0x61, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x42, 0x08, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x22, 0x98, 0x01, 0x0a, 0x2a, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x63, 0x6d,
	0x70, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x05, 0x62, 0x79, 0x74,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65,
	0x73, 0x12, 0x18, 0x0a, 0x06, 0x62, 0x61, 0x73, 0x65, 0x35, 0x38, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x06, 0x62, 0x61, 0x73, 0x65, 0x35, 0x38, 0x12, 0x18, 0x0a, 0x06, 0x62,
	0x61, 0x73, 0x65, 0x36, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x62,
	0x61, 0x73, 0x65, 0x36, 0x34, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x7d, 0x0a,
	0x2c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x4c, 0x61, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x10, 0x0a,
	0x02, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x02, 0x65, 0x71, 0x12,
	0x10, 0x0a, 0x02, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x02, 0x6e,
	0x65, 0x12, 0x10, 0x0a, 0x02, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52,
	0x02, 0x6c, 0x74, 0x12, 0x10, 0x0a, 0x02, 0x67, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x48,
	0x00, 0x52, 0x02, 0x67, 0x74, 0x42, 0x05, 0x0a, 0x03, 0x63, 0x6d, 0x70, 0x22, 0x26, 0x0a, 0x14,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x50, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x22, 0xec, 0x02, 0x0a, 0x0f, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x49, 0x0a,
	0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6a, 0x65, 0x74, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0b, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6a, 0x65, 0x74, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x07,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6a, 0x65, 0x74, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x34, 0x0a,
	0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6a, 0x65,
	0x74, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x04, 0x70,
	0x6f, 0x6e, 0x67, 0x42, 0x0e, 0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6f, 0x6e,
	0x65, 0x6f, 0x66, 0x22, 0x7d, 0x0a, 0x1a, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x4b, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6a, 0x65, 0x74, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x6c,
	0x6f, 0x74, 0x22, 0x9c, 0x04, 0x0a, 0x1e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x12, 0x36, 0x0a, 0x17, 0x6e, 0x75, 0x6d, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x6e, 0x75, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12,
	0x3f, 0x0a, 0x1c, 0x6e, 0x75, 0x6d, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x6f, 0x6e, 0x6c, 0x79, 0x5f,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x19, 0x6e, 0x75, 0x6d, 0x52, 0x65, 0x61, 0x64, 0x6f, 0x6e,
	0x6c, 0x79, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x12, 0x43, 0x0a, 0x1e, 0x6e, 0x75, 0x6d, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x6f, 0x6e, 0x6c, 0x79,
	0x5f, 0x75, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1b, 0x6e, 0x75, 0x6d, 0x52, 0x65, 0x61,
	0x64, 0x6f, 0x6e, 0x6c, 0x79, 0x55, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x5f,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x68, 0x61, 0x73, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0f, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x68, 0x61, 0x73, 0x68,
	0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x0c, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73,
	0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x73,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4b,
	0x65, 0x79, 0x73, 0x12, 0x42, 0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6a, 0x65, 0x74, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x64, 0x49, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x58, 0x0a, 0x15, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x73,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6a, 0x65, 0x74, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x13, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70,
	0x73, 0x22, 0x8c, 0x01, 0x0a, 0x16, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3f, 0x0a, 0x07,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x6a, 0x65, 0x74, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x6c, 0x6f,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70,
	0x22, 0x9a, 0x02, 0x0a, 0x1a, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x06, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6d, 0x70, 0x6f,
	0x72, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6c, 0x61, 0x6d, 0x70, 0x6f,
	0x72, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x72,
	0x65, 0x6e, 0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x0d,
	0x77, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0c, 0x77, 0x72, 0x69, 0x74, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x28, 0x0a, 0x0d, 0x74, 0x78, 0x6e, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0c, 0x74, 0x78, 0x6e, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x88, 0x01, 0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f,
	0x74, 0x78, 0x6e, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x15, 0x0a,
	0x13, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x69, 0x6e, 0x67, 0x22, 0x25, 0x0a, 0x13, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x92, 0x01, 0x0a, 0x19,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x29, 0x0a, 0x10, 0x77, 0x72,
	0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x77, 0x72, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x61, 0x64, 0x6f, 0x6e, 0x6c,
	0x79, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0f, 0x72, 0x65, 0x61, 0x64, 0x6f, 0x6e, 0x6c, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73,
	0x22, 0x6f, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x64, 0x49, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x5f, 0x69, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x49, 0x64, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x5b, 0x0a, 0x16, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50, 0x61,
	0x72, 0x73, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x04, 0x70,
	0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6a, 0x65, 0x74, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x04, 0x70, 0x69,
	0x6e, 0x67, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x70, 0x69, 0x6e, 0x67, 0x22, 0xbd,
	0x02, 0x0a, 0x0b, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37,
	0x0a, 0x0a, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6a, 0x65, 0x74, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x49,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x73, 0x65, 0x74, 0x5f, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6a, 0x65,
	0x74, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x48, 0x00, 0x52, 0x09, 0x73, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x2b,
	0x0a, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x6a, 0x65, 0x74, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x48, 0x00, 0x52, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x03, 0x62,
	0x75, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6a, 0x65, 0x74, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x2e, 0x42, 0x75, 0x79, 0x48, 0x00, 0x52, 0x03, 0x62, 0x75, 0x79, 0x12,
	0x25, 0x0a, 0x04, 0x73, 0x65, 0x6c, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x6a, 0x65, 0x74, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x53, 0x65, 0x6c, 0x6c, 0x48, 0x00,
	0x52, 0x04, 0x73, 0x65, 0x6c, 0x6c, 0x12, 0x31, 0x0a, 0x08, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6a, 0x65, 0x74, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x48, 0x00, 0x52,
	0x08, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x42, 0x13, 0x0a, 0x11, 0x69, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x22, 0x0c,
	0x0a, 0x0a, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x22, 0xcd, 0x02, 0x0a,
	0x09, 0x53, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x65,
	0x65, 0x5f, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0c, 0x66, 0x65, 0x65, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x12,
	0x43, 0x0a, 0x1e, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x76, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1b, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c,
	0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x73, 0x12, 0x3f, 0x0a, 0x1c, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f,
	0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x73, 0x6f, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x19, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x6c, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x6f, 0x6c, 0x52, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x73, 0x12, 0x3d, 0x0a, 0x1b, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c,
	0x5f, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x18, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x6c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x10, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x75, 0x70, 0x70,
	0x6c, 0x79, 0x12, 0x28, 0x0a, 0x10, 0x66, 0x65, 0x65, 0x5f, 0x62, 0x61, 0x73, 0x69, 0x73, 0x5f,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x66, 0x65,
	0x65, 0x42, 0x61, 0x73, 0x69, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x46, 0x0a, 0x06,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x69, 0x22, 0x3f, 0x0a, 0x03, 0x42, 0x75, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x6f, 0x6c, 0x5f, 0x63,
	0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x53, 0x6f,
	0x6c, 0x43, 0x6f, 0x73, 0x74, 0x22, 0x44, 0x0a, 0x04, 0x53, 0x65, 0x6c, 0x6c, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x6f, 0x6c,
	0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x6d,
	0x69, 0x6e, 0x53, 0x6f, 0x6c, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x0a, 0x0a, 0x08, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x22, 0x98, 0x02, 0x0a, 0x20, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x73, 0x65,
	0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c,
	0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x12, 0x3b,
	0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x6a, 0x65, 0x74, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x72,
	0x65, 0x63, 0x65, 0x6e, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x68, 0x61, 0x73, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x3a, 0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6a,
	0x65, 0x74, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x23, 0x0a, 0x0b, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x24, 0x0a, 0x0c, 0x50, 0x6f, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x13, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x2e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x22, 0x25, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x32, 0xc8, 0x02, 0x0a, 0x09, 0x4a, 0x65,
	0x74, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x4a, 0x0a, 0x09, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x12, 0x1b, 0x2e, 0x6a, 0x65, 0x74, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1a, 0x2e, 0x6a, 0x65, 0x74, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0x00, 0x28,
	0x01, 0x30, 0x01, 0x12, 0x67, 0x0a, 0x0f, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x50, 0x61, 0x72, 0x73, 0x65, 0x64, 0x12, 0x21, 0x2e, 0x6a, 0x65, 0x74, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50, 0x61, 0x72, 0x73,
	0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x6a, 0x65, 0x74, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x73, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x39, 0x0a, 0x04,
	0x50, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x2e, 0x6a, 0x65, 0x74, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6a,
	0x65, 0x74, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x50, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x2e, 0x6a, 0x65, 0x74, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6a, 0x65, 0x74, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e,
	0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_jetstream_proto_rawDescOnce sync.Once
	file_jetstream_proto_rawDescData = file_jetstream_proto_rawDesc
)

func file_jetstream_proto_rawDescGZIP() []byte {
	file_jetstream_proto_rawDescOnce.Do(func() {
		file_jetstream_proto_rawDescData = protoimpl.X.CompressGZIP(file_jetstream_proto_rawDescData)
	})
	return file_jetstream_proto_rawDescData
}

var file_jetstream_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_jetstream_proto_goTypes = []interface{}{
	(*SubscribeRequest)(nil),                             // 0: jetstream.SubscribeRequest
	(*SubscribeRequestFilterTransactions)(nil),           // 1: jetstream.SubscribeRequestFilterTransactions
	(*SubscribeRequestFilterAccounts)(nil),               // 2: jetstream.SubscribeRequestFilterAccounts
	(*SubscribeRequestFilterAccountsFilter)(nil),         // 3: jetstream.SubscribeRequestFilterAccountsFilter
	(*SubscribeRequestFilterAccountsFilterMemcmp)(nil),   // 4: jetstream.SubscribeRequestFilterAccountsFilterMemcmp
	(*SubscribeRequestFilterAccountsFilterLamports)(nil), // 5: jetstream.SubscribeRequestFilterAccountsFilterLamports
	(*SubscribeRequestPing)(nil),                         // 6: jetstream.SubscribeRequestPing
	(*SubscribeUpdate)(nil),                              // 7: jetstream.SubscribeUpdate
	(*SubscribeUpdateTransaction)(nil),                   // 8: jetstream.SubscribeUpdateTransaction
	(*SubscribeUpdateTransactionInfo)(nil),               // 9: jetstream.SubscribeUpdateTransactionInfo
	(*SubscribeUpdateAccount)(nil),                       // 10: jetstream.SubscribeUpdateAccount
	(*SubscribeUpdateAccountInfo)(nil),                   // 11: jetstream.SubscribeUpdateAccountInfo
	(*SubscribeUpdatePing)(nil),                          // 12: jetstream.SubscribeUpdatePing
	(*SubscribeUpdatePong)(nil),                          // 13: jetstream.SubscribeUpdatePong
	(*MessageAddressTableLookup)(nil),                    // 14: jetstream.MessageAddressTableLookup
	(*CompiledInstruction)(nil),                          // 15: jetstream.CompiledInstruction
	(*SubscribeParsedRequest)(nil),                       // 16: jetstream.SubscribeParsedRequest
	(*Instruction)(nil),                                  // 17: jetstream.Instruction
	(*Initialize)(nil),                                   // 18: jetstream.Initialize
	(*SetParams)(nil),                                    // 19: jetstream.SetParams
	(*Create)(nil),                                       // 20: jetstream.Create
	(*Buy)(nil),                                          // 21: jetstream.Buy
	(*Sell)(nil),                                         // 22: jetstream.Sell
	(*Withdraw)(nil),                                     // 23: jetstream.Withdraw
	(*SubscribeUpdateParsedTransaction)(nil),             // 24: jetstream.SubscribeUpdateParsedTransaction
	(*PingRequest)(nil),                                  // 25: jetstream.PingRequest
	(*PongResponse)(nil),                                 // 26: jetstream.PongResponse
	(*GetVersionRequest)(nil),                            // 27: jetstream.GetVersionRequest
	(*GetVersionResponse)(nil),                           // 28: jetstream.GetVersionResponse
	(*GetSlotResponse)(nil),                              // 29: jetstream.GetSlotResponse
	nil,                                                  // 30: jetstream.SubscribeRequest.TransactionsEntry
	nil,                                                  // 31: jetstream.SubscribeRequest.AccountsEntry
	(*timestamp.Timestamp)(nil),                          // 32: google.protobuf.Timestamp
}
var file_jetstream_proto_depIdxs = []int32{
	30, // 0: jetstream.SubscribeRequest.transactions:type_name -> jetstream.SubscribeRequest.TransactionsEntry
	31, // 1: jetstream.SubscribeRequest.accounts:type_name -> jetstream.SubscribeRequest.AccountsEntry
	6,  // 2: jetstream.SubscribeRequest.ping:type_name -> jetstream.SubscribeRequestPing
	3,  // 3: jetstream.SubscribeRequestFilterAccounts.filters:type_name -> jetstream.SubscribeRequestFilterAccountsFilter
	4,  // 4: jetstream.SubscribeRequestFilterAccountsFilter.memcmp:type_name -> jetstream.SubscribeRequestFilterAccountsFilterMemcmp
	5,  // 5: jetstream.SubscribeRequestFilterAccountsFilter.lamports:type_name -> jetstream.SubscribeRequestFilterAccountsFilterLamports
	32, // 6: jetstream.SubscribeUpdate.created_at:type_name -> google.protobuf.Timestamp
	8,  // 7: jetstream.SubscribeUpdate.transaction:type_name -> jetstream.SubscribeUpdateTransaction
	10, // 8: jetstream.SubscribeUpdate.account:type_name -> jetstream.SubscribeUpdateAccount
	12, // 9: jetstream.SubscribeUpdate.ping:type_name -> jetstream.SubscribeUpdatePing
	13, // 10: jetstream.SubscribeUpdate.pong:type_name -> jetstream.SubscribeUpdatePong
	9,  // 11: jetstream.SubscribeUpdateTransaction.transaction:type_name -> jetstream.SubscribeUpdateTransactionInfo
	15, // 12: jetstream.SubscribeUpdateTransactionInfo.instructions:type_name -> jetstream.CompiledInstruction
	14, // 13: jetstream.SubscribeUpdateTransactionInfo.address_table_lookups:type_name -> jetstream.MessageAddressTableLookup
	11, // 14: jetstream.SubscribeUpdateAccount.account:type_name -> jetstream.SubscribeUpdateAccountInfo
	6,  // 15: jetstream.SubscribeParsedRequest.ping:type_name -> jetstream.SubscribeRequestPing
	18, // 16: jetstream.Instruction.initialize:type_name -> jetstream.Initialize
	19, // 17: jetstream.Instruction.set_params:type_name -> jetstream.SetParams
	20, // 18: jetstream.Instruction.create:type_name -> jetstream.Create
	21, // 19: jetstream.Instruction.buy:type_name -> jetstream.Buy
	22, // 20: jetstream.Instruction.sell:type_name -> jetstream.Sell
	23, // 21: jetstream.Instruction.withdraw:type_name -> jetstream.Withdraw
	10, // 22: jetstream.SubscribeUpdateParsedTransaction.account:type_name -> jetstream.SubscribeUpdateAccount
	17, // 23: jetstream.SubscribeUpdateParsedTransaction.instructions:type_name -> jetstream.Instruction
	1,  // 24: jetstream.SubscribeRequest.TransactionsEntry.value:type_name -> jetstream.SubscribeRequestFilterTransactions
	2,  // 25: jetstream.SubscribeRequest.AccountsEntry.value:type_name -> jetstream.SubscribeRequestFilterAccounts
	0,  // 26: jetstream.Jetstream.Subscribe:input_type -> jetstream.SubscribeRequest
	16, // 27: jetstream.Jetstream.SubscribeParsed:input_type -> jetstream.SubscribeParsedRequest
	25, // 28: jetstream.Jetstream.Ping:input_type -> jetstream.PingRequest
	27, // 29: jetstream.Jetstream.GetVersion:input_type -> jetstream.GetVersionRequest
	7,  // 30: jetstream.Jetstream.Subscribe:output_type -> jetstream.SubscribeUpdate
	24, // 31: jetstream.Jetstream.SubscribeParsed:output_type -> jetstream.SubscribeUpdateParsedTransaction
	26, // 32: jetstream.Jetstream.Ping:output_type -> jetstream.PongResponse
	28, // 33: jetstream.Jetstream.GetVersion:output_type -> jetstream.GetVersionResponse
	30, // [30:34] is the sub-list for method output_type
	26, // [26:30] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_jetstream_proto_init() }
func file_jetstream_proto_init() {
	if File_jetstream_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_jetstream_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jetstream_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeRequestFilterTransactions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jetstream_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeRequestFilterAccounts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jetstream_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeRequestFilterAccountsFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jetstream_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeRequestFilterAccountsFilterMemcmp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jetstream_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeRequestFilterAccountsFilterLamports); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jetstream_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeRequestPing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jetstream_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jetstream_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeUpdateTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jetstream_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeUpdateTransactionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jetstream_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeUpdateAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jetstream_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeUpdateAccountInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jetstream_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeUpdatePing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jetstream_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeUpdatePong); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jetstream_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageAddressTableLookup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jetstream_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompiledInstruction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jetstream_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeParsedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jetstream_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Instruction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jetstream_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Initialize); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jetstream_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jetstream_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Create); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jetstream_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Buy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jetstream_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sell); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jetstream_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Withdraw); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jetstream_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeUpdateParsedTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jetstream_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jetstream_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PongResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jetstream_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jetstream_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jetstream_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSlotResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_jetstream_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_jetstream_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*SubscribeRequestFilterAccountsFilter_Memcmp)(nil),
		(*SubscribeRequestFilterAccountsFilter_Datasize)(nil),
		(*SubscribeRequestFilterAccountsFilter_Lamports)(nil),
	}
	file_jetstream_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*SubscribeRequestFilterAccountsFilterMemcmp_Bytes)(nil),
		(*SubscribeRequestFilterAccountsFilterMemcmp_Base58)(nil),
		(*SubscribeRequestFilterAccountsFilterMemcmp_Base64)(nil),
	}
	file_jetstream_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*SubscribeRequestFilterAccountsFilterLamports_Eq)(nil),
		(*SubscribeRequestFilterAccountsFilterLamports_Ne)(nil),
		(*SubscribeRequestFilterAccountsFilterLamports_Lt)(nil),
		(*SubscribeRequestFilterAccountsFilterLamports_Gt)(nil),
	}
	file_jetstream_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*SubscribeUpdate_Transaction)(nil),
		(*SubscribeUpdate_Account)(nil),
		(*SubscribeUpdate_Ping)(nil),
		(*SubscribeUpdate_Pong)(nil),
	}
	file_jetstream_proto_msgTypes[11].OneofWrappers = []interface{}{}
	file_jetstream_proto_msgTypes[16].OneofWrappers = []interface{}{}
	file_jetstream_proto_msgTypes[17].OneofWrappers = []interface{}{
		(*Instruction_Initialize)(nil),
		(*Instruction_SetParams)(nil),
		(*Instruction_Create)(nil),
		(*Instruction_Buy)(nil),
		(*Instruction_Sell)(nil),
		(*Instruction_Withdraw)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_jetstream_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_jetstream_proto_goTypes,
		DependencyIndexes: file_jetstream_proto_depIdxs,
		MessageInfos:      file_jetstream_proto_msgTypes,
	}.Build()
	File_jetstream_proto = out.File
	file_jetstream_proto_rawDesc = nil
	file_jetstream_proto_goTypes = nil
	file_jetstream_proto_depIdxs = nil
}
